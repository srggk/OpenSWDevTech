version: '3.8'
services:
  web:
    build: .
    image: srggk/openswdevtech:latest
    container_name: poke-web
    command: python3 app.py
    restart: always
    ports:
      - 5000:5000
    env_file:
      - .env.docker
    depends_on:
      - postgres
      - redis
      - ftp
      - adminer
  postgres:
    image: postgres:latest
    restart: always
    container_name: poke-postgres
    ports:
      - 48888:5432
    environment:
      - POSTGRES_DB=${POSTGRESQL_DB_NAME}
      - POSTGRES_USER=${POSTGRESQL_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  redis:
    image: redis:7.0.9-alpine
    container_name: poke-redis
    restart: unless-stopped
    command: redis-server --port "${CACHE_REDIS_PORT}"
    volumes:
      - redis-data:/data
  ftp:
    image: delfer/alpine-ftp-server
    container_name: poke-ftp
    restart: always
    expose:
      - 21
    environment:
      - "USERS=${FTP_USER}|${FTP_PASSWORD}|/ftp/ftp"
    # volumes:
    #   - ./ftp_server_folder:/ftp/ftp/ftp_server_folder
  grafana:
    image: grafana/grafana-enterprise
    container_name: poke-grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  postgres-data:
  redis-data:
  grafana-data:
